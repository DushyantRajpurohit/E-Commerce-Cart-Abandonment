# -*- coding: utf-8 -*-
"""E-commerce Cart Abandonment Dashboard

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yVuFy7DnX0BmJYzWLFKJLdM06kjomzrm
"""

#Importing Libraries
import streamlit as st
import pandas as pd
import plotly.express as px

#Loading the Dataset
data=pd.read_csv("cart_abandonment_dataset.csv")

#Feature Engineering
data['Session_Date']=pd.to_datetime(data['Session_Date'])
data['Day']=data['Session_Date'].dt.day_name()
data['Week']=data['Session_Date'].dt.isocalendar().week
data.drop(['Session_Date'], axis=1, inplace=True)

#Creating Siderbar
st.sidebar.title("Filters")
selected_device=st.sidebar.multiselect("Select Device Type", options=data['Device_Type'].unique(), default=data['Device_Type'].unique())

selected_gender=st.sidebar.multiselect("Select Gender", options=data['Gender'].unique(), default=data['Gender'].unique())

selected_referral=st.sidebar.multiselect("Select Referral Medium", options=data['Referral_Medium'].unique(), default=data['Referral_Medium'].unique())

selected_week=st.sidebar.slider("Select Week", min_value=data['Week'].min(), max_value=data['Week'].max(), value=(data['Week'].min(), data['Week'].max()))

days=sorted(data['Day'].unique().tolist())
selected_day=st.sidebar.selectbox("Select Day", options=['All']+days, index=0)

#Filtering the Data
filtered_data=data[(data['Device_Type'].isin(selected_device)) &
                   (data['Gender'].isin(selected_gender)) &
                   (data['Referral_Medium'].isin(selected_referral)) &
                   (data['Week'].between(selected_week[0], selected_week[1])) &
                   ((data['Day']==selected_day) if selected_day!='All' else True)]

abandoned=filtered_data[filtered_data['Cart_Status']=='Abandoned']
data=filtered_data

st.title("E-commerce Cart Abandonment Dashboard")

#KPIs(Key Performance Indicators)
kpi1, kpi2, kpi3 = st.columns(3)
kpi1.metric("Total Users", len(data))
kpi2.metric('Abandoned Users', len(abandoned))
kpi3.metric("Abandonment Rate", f"{(len(abandoned)/len(data))*100:.2f}%")

kpi4, kpi5, kpi6 = st.columns(3)
kpi4.metric("Average Cart Value", f"${data['Cart_Value'].mean():.2f}")
kpi5.metric('Total Cart Value', f"${data['Cart_Value'].sum():.2f}")
kpi6.metric('Abandoned Cart Value', f'${abandoned["Cart_Value"].sum():.2f}')

st.metric("Average Session Duration", f"{data['Session_Duration'].mean():.2f} minutes")

st.markdown("---")

#Charts
st.subheader("Cart Overview")
#Purchase Category vs Cart Status Chart
fig1=px.histogram(data, x='Purchase_Category', color='Cart_Status', title='Purchase Category by Cart Status', barmode='group')
st.plotly_chart(fig1, use_container_width=True)

col1, col2 = st.columns(2)
#Cart Status Distribution Chart
fig2=px.pie(data, names='Cart_Status', title='Cart Status Distribution', hole=0.4)
col1.plotly_chart(fig2, use_container_width=True)

#Abandonment Reason Chart
if 'Abandonment_Reason' in data.columns and not data['Abandonment_Reason'].isnull().all():
  fig3=px.pie(abandoned, names='Abandonment_Reason', title='Reasons for Cart Abandonment', hole=0.4)
  col2.plotly_chart(fig3, use_container_width=True)
else:
  col2.warning("Abandonment reason data is missing or empty.")

st.markdown("---")

st.subheader("Demographic Breakdown of Abandoned Users")
col3, col4 = st.columns(2)
#Gender Distribution Chart
fig4=px.pie(abandoned, names='Gender', title='Gender Distribution', hole=0.4)
col3.plotly_chart(fig4, use_container_width=True)

#Referral Medium Chart
fig5=px.pie(abandoned, names='Referral_Medium', title='Referral Medium', hole=0.4)
col4.plotly_chart(fig5, use_container_width=True)

col5, col6 = st.columns(2)
#Device Type Distribution Chart
fig6=px.pie(abandoned, names='Device_Type', title='Device Type Distribution', hole=0.4)
col5.plotly_chart(fig6, use_container_width=True)

#User Location Chart
fig7=px.histogram(abandoned, x='User_Location', title='User Location', barmode='group')
col6.plotly_chart(fig7, use_container_width=True)

st.markdown("---")

st.subheader("Cart Contents of Abandoned Carts")
#Cart Contents Chart
fig8=px.histogram(abandoned, x='Cart_Contents', barmode='group')
st.plotly_chart(fig8, use_container_width=True)

st.markdown("---")

st.subheader("Weekly Abandonment Trend")
#Weekly Abandonment Trend Chart
weekly=data.groupby(['Week', 'Cart_Status']).size().reset_index(name='Count')
fig9=px.line(weekly, x='Week', y='Count', color='Cart_Status')
st.plotly_chart(fig9, use_container_width=True)

st.markdown("---")

st.subheader("Day-wise Abandonment Trend")
#Day-wise Abandonment Trend Chart
fig10=px.histogram(abandoned, x='Day', barmode='group')
st.plotly_chart(fig10, use_container_width=True)

st.markdown("---")

st.subheader("Key Insights")
st.markdown("""
1. Accessories have the highest abandonment rate. Introduce limited-time offers or discounts to create urgency and improve conversion.

2. Mobile users show a higher abandonment rate. This could be due to UI or payment friction. Consider optimizing the mobile checkout experience.

3. Female users form the majority of the user base. Targeted offers on women-focused products may improve engagement and reduce drop-offs.

4. Social media referrals result in more cart abandonment. This may reflect lower purchase intent. Improve landing page trust signals or retarget these users.

5. Virginia sees the highest abandonment, while New York the least. Analyze regional trends and adapt marketing strategies based on geographic performance.

6. The leading reason for abandonment is the lack of guest checkout. Enabling guest checkout could significantly reduce friction and improve sales.
""")